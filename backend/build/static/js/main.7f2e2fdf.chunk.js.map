{"version":3,"sources":["contexts/SearchResultContext.js","components/ResultDetails.js","contexts/RequestedListContext.js","contexts/UserContext.js","contexts/ToastContext.js","components/VoteSection.js","components/ReqButton.js","components/InfoListItem.js","components/BookInfo.js","components/BookResult.js","components/PageNav.js","components/SearchBar.js","components/RequestSection.js","components/Tabs.js","components/Popup.js","components/RegisterForm.js","components/SignInForm.js","components/SignOutMessage.js","components/Toast.js","components/MyRequestList.js","components/ManageUsers.js","components/ManageBooks.js","components/AdminTools.js","App.js","index.js","firebaseConfig.js"],"names":["SearchResultContext","createContext","SearchResultProvider","children","useState","data","results","setResults","fetched","setFetched","isLoading","setIsLoading","Provider","value","getData","url","keywords","fetch","then","res","json","catch","err","console","log","ResultDetails","useContext","totalItems","resultStatus","resultRef","useRef","useEffect","current","focus","aria-live","ref","tabIndex","RequestedListContext","firebase","firestore","RequestedListProvider","items","requestedList","setRequestedList","isFetched","setIsFetched","serverUrl","setServerUrl","getRequestedList","collection","orderBy","onSnapshot","querySnapshot","allData","forEach","doc","push","initialState","uid","email","emailVerified","role","UserContext","UserProvider","userStatus","setUserStatus","isSignedIn","setIsSignedIn","authCheckDone","setAuthCheckDone","alertMessage","setAlert","requestList","setRequestList","registerOnServer","password","sendEmailVerification","a","method","headers","body","JSON","stringify","fetching","result","status","signIn","message","auth","signInWithEmailAndPassword","error","getRequestList","snapshot","exists","signOut","checkUserStatus","onAuthStateChanged","user","getIdTokenResult","idTokenResult","claims","admin","register","createUserWithEmailAndPassword","toastMsg","isShown","ToastContext","ToastProvider","toast","setToast","showToast","toastShown","setTimeout","VoteSection","bookInfo","voteSum","setVoteSum","votedOn","setVotedOn","vote","action","book","handleVote","alert","response","includes","id","Fragment","className","type","onClick","ReqButton","React","sendData","title","InfoListItem","detailedInfo","category","listItem","info","arrJoin","join","b","src","imageLinks","smallThumbnail","alt","subtitle","authors","publisher","publishedDate","categories","averageRating","handleListItem","content","description","BookDescription","showDesc","setShowDesc","href","e","preventDefault","BookInfo","undefined","map","key","volumeInfo","BookResult","Component","requestedData","unrequestedData","searchResults","requestedResults","filter","item","i","arr","unrequestedResults","reverse","filterSearchResults","length","SearchBar","onChange","searchResultContext","getUrl","URL","params","q","startIndex","maxResults","search","URLSearchParams","toString","name","placeholder","onKeyUp","keyCode","bind","RequestSection","Tabs","activeTab","tabs","label","to","Popup","history","RegisterForm","emptyForm","handleSubmitOnServer","onSubmit","htmlFor","autoFocus","checked","goBack","SignInForm","SignOutMessage","window","location","reload","Toast","MyRequestList","setData","books","headingRef","getReqBookInfos","list","where","get","query","unshift","ManageUsers","setIsFetching","setUsers","users","getAllUsers","ManageBooks","AdminTools","path","exact","from","App","useReducer","state","newState","input","setInput","target","useHistory","hostname","ReactDOM","render","document","getElementById","require","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","module","exports"],"mappings":"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","file":"static/js/main.7f2e2fdf.chunk.js","sourcesContent":["import React, { useState, createContext, useReducer } from 'react';\r\n\r\nexport const SearchResultContext = createContext();\r\n\r\nexport const SearchResultProvider = ({ children }) => {\r\n  const [results, setResults] = useState({\r\n    data: {},\r\n  });\r\n  const [fetched, setFetched] = useState(false);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const getData = (url, keywords) => {\r\n    // don't run if searchbar is empty\r\n    if (keywords === '') return null;\r\n\r\n    setIsLoading(true);\r\n    fetch(url(keywords))\r\n      .then((res) => res.json())\r\n      .then((json) => {\r\n        setResults({ data: json });\r\n        setFetched(true);\r\n        setIsLoading(false);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n  return (\r\n    <SearchResultContext.Provider\r\n      value={{ results, fetched, isLoading, getData }}\r\n    >\r\n      {children}\r\n    </SearchResultContext.Provider>\r\n  );\r\n};\r\n","import React, { useRef, useEffect, useContext } from 'react';\r\nimport { SearchResultContext } from '../contexts/SearchResultContext';\r\n\r\nexport const ResultDetails = () => {\r\n  const { results, isLoading, fetched } = useContext(SearchResultContext);\r\n  const totalItems = results.data.totalItems;\r\n  let resultStatus = '';\r\n\r\n  if (isLoading) resultStatus = 'loading...';\r\n  else if (fetched && !isLoading)\r\n    resultStatus =\r\n      totalItems === 0\r\n        ? 'Pencarian tidak ditemukan'\r\n        : `ditemukan ${totalItems} hasil`;\r\n\r\n  // focus handling\r\n  const resultRef = useRef();\r\n  useEffect(() => resultRef.current.focus(), [resultStatus]);\r\n\r\n  return (\r\n    <span aria-live=\"polite\" ref={resultRef} tabIndex={0}>\r\n      {resultStatus}\r\n    </span>\r\n  );\r\n};\r\n","import React, { createContext, useState } from 'react';\r\nimport firebase from '../firebaseConfig';\r\n\r\n// firebase db setup\r\nconst db = firebase.firestore();\r\nexport const RequestedListContext = createContext();\r\nexport const RequestedListProvider = ({ children }) => {\r\n  const [requestedList, setRequestedList] = useState({\r\n    items: [],\r\n  });\r\n  const [isFetched, setIsFetched] = useState(false);\r\n  const [serverUrl, setServerUrl] = useState(\r\n    'https://us-central1-mitranetra-1234.cloudfunctions.net/app'\r\n  );\r\n\r\n  // functions\r\n  const getListServerSide = () => {\r\n    // gak dipake karena harus fetch berkala, jadi kurang dinamis.\r\n    // jangan lupa diganti ketika build dan deploy\r\n    // const serverUrl =\r\n    // 'https://us-central1-mitranetra-1234.cloudfunctions.net/app';\r\n    return fetch(`${serverUrl}/api/requests`).then((res) => res.json());\r\n  };\r\n\r\n  // run local database when on localhost for testing\r\n  // you need to install firebase emulators to run firestore locally!\r\n  // if this is disabled, the changes will affect the production stage!\r\n  /*\r\n  if (window.location.hostname === 'localhost') {\r\n    console.log('localhost detected!');\r\n    db.settings({\r\n      host: 'localhost:8080',\r\n      ssl: false,\r\n    });\r\n  }\r\n  */\r\n  // get list on client side\r\n  const getRequestedList = () => {\r\n    const db = firebase.firestore();\r\n    db.collection('buku')\r\n      .orderBy('voteSum', 'desc')\r\n      .onSnapshot(\r\n        (querySnapshot) => {\r\n          let allData = [];\r\n          querySnapshot.forEach((doc) => {\r\n            allData.push(doc.data());\r\n          });\r\n          setRequestedList({ items: allData });\r\n          console.log(allData);\r\n          setIsFetched(true);\r\n        },\r\n        (err) => {\r\n          setIsFetched(false);\r\n          console.log('error while fetching requestid list:', err);\r\n        }\r\n      );\r\n  };\r\n\r\n  return (\r\n    <RequestedListContext.Provider\r\n      value={{\r\n        requestedList,\r\n        isFetched,\r\n        getRequestedList,\r\n        setServerUrl,\r\n        serverUrl,\r\n      }}\r\n    >\r\n      {children}\r\n    </RequestedListContext.Provider>\r\n  );\r\n};\r\n","import React, { useState, useContext, createContext } from 'react';\r\nimport firebase from '../firebaseConfig';\r\nimport { RequestedListContext } from './RequestedListContext';\r\n\r\nconst initialState = {\r\n  uid: '',\r\n  email: '',\r\n  emailVerified: false,\r\n  role: '',\r\n};\r\nexport const UserContext = createContext(initialState);\r\nexport const UserProvider = ({ children }) => {\r\n  const [userStatus, setUserStatus] = useState(initialState);\r\n  const [isSignedIn, setIsSignedIn] = useState(false);\r\n  const [authCheckDone, setAuthCheckDone] = useState(false);\r\n  const [alertMessage, setAlert] = useState('');\r\n  const [requestList, setRequestList] = useState([]);\r\n  const { serverUrl } = useContext(RequestedListContext);\r\n\r\n  // actions\r\n  // register on server side\r\n  // const serverUrl =\r\n  // 'https://us-central1-mitranetra-1234.cloudfunctions.net/app';\r\n  const registerOnServer = async (email, password, sendEmailVerification) => {\r\n    try {\r\n      const fetching = await fetch(`${serverUrl}/api/users`, {\r\n        method: 'post',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({ email, password, sendEmailVerification }),\r\n      });\r\n      const result = await fetching.json();\r\n      if (result.status === 'success') {\r\n        setAlert('success');\r\n\r\n        // auto sign in after register\r\n        signIn(email, password);\r\n      } else setAlert(result.err.message);\r\n    } catch (err) {\r\n      console.log('error while connecting to server:', err);\r\n    }\r\n  };\r\n\r\n  // register user on client side\r\n  const register = (email, password) => {\r\n    firebase\r\n      .auth()\r\n      .createUserWithEmailAndPassword(email, password)\r\n      .then(() => setAlert('success'))\r\n      /*\r\n      .then(() => {\r\n        firebase.auth().onAuthStateChanged((user) => {\r\n          user.sendEmailVerification();\r\n          console.log('email verification sent');\r\n        });\r\n      })\r\n      */\r\n      .catch((error) => {\r\n        setAlert(error.message);\r\n      });\r\n  };\r\n\r\n  // sign in user\r\n  const signIn = (email, password) => {\r\n    firebase\r\n      .auth()\r\n      .signInWithEmailAndPassword(email, password)\r\n      .then(() => {\r\n        setAlert('success');\r\n        setAuthCheckDone(true);\r\n      })\r\n      .catch((error) => setAlert(error.message));\r\n  };\r\n  // check user access\r\n  const checkUserStatus = () => {\r\n    firebase.auth().onAuthStateChanged((user) => {\r\n      if (user) {\r\n        // user is signed in\r\n        console.log(user.uid);\r\n\r\n        // check if the user is admin\r\n        user.getIdTokenResult().then((idTokenResult) => {\r\n          if (!!idTokenResult.claims.admin) {\r\n            console.log('user is admin');\r\n            setUserStatus({\r\n              uid: user.uid,\r\n              email: user.email,\r\n              emailVerified: user.emailVerified,\r\n              role: 'admin',\r\n            });\r\n          } else {\r\n            console.log('user is a basic user');\r\n            setUserStatus({\r\n              uid: user.uid,\r\n              email: user.email,\r\n              emailVerified: user.emailVerified,\r\n              role: '',\r\n            });\r\n          }\r\n        });\r\n        getRequestList(user.uid);\r\n        setIsSignedIn(true);\r\n      } else {\r\n        // user is not signed in\r\n        setIsSignedIn(false);\r\n        setUserStatus({\r\n          uid: '',\r\n          email: '',\r\n          emailVerified: false,\r\n          role: '',\r\n        });\r\n        console.log(userStatus.uid);\r\n      }\r\n    });\r\n    setAuthCheckDone(true);\r\n  };\r\n\r\n  // sign out user\r\n  const signOut = () => {\r\n    return firebase\r\n      .auth()\r\n      .signOut()\r\n      .then(\r\n        () => console.log('sign out success'),\r\n        (err) => {\r\n          console.log(err);\r\n          return { err };\r\n        }\r\n      );\r\n  };\r\n\r\n  // query user's request list\r\n  const getRequestList = (uid) => {\r\n    try {\r\n      console.log(uid);\r\n      firebase\r\n        .firestore()\r\n        .collection('users')\r\n        .doc(uid)\r\n        .onSnapshot((snapshot) => {\r\n          if (!snapshot.exists) return console.log('request list is empty');\r\n          const { requestList } = snapshot.data();\r\n          setRequestList(requestList);\r\n        });\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n  // render\r\n  return (\r\n    <UserContext.Provider\r\n      value={{\r\n        userStatus,\r\n        authCheckDone,\r\n        registerOnServer,\r\n        isSignedIn,\r\n        signIn,\r\n        signOut,\r\n        checkUserStatus,\r\n        register,\r\n        alertMessage,\r\n        getRequestList,\r\n        requestList,\r\n        setAlert,\r\n      }}\r\n    >\r\n      {children}\r\n    </UserContext.Provider>\r\n  );\r\n};\r\n","import React, { createContext, useState } from 'react';\r\n\r\nconst initialState = {\r\n  toastMsg: '',\r\n  isShown: false,\r\n};\r\n\r\nexport const ToastContext = createContext(initialState);\r\nexport const ToastProvider = ({ children }) => {\r\n  const [toast, setToast] = useState(initialState);\r\n\r\n  // show toast function\r\n  // toastShown defines wether the toast is visually shown or only announced by screen reader (after completing actions that need feedback)\r\n  const showToast = (message, toastShown) => {\r\n    setToast({ toastMsg: message, isShown: toastShown });\r\n    // remove toast after 3 sec\r\n    setTimeout(() => setToast({ toastMsg: '', isShown: false }), 3000);\r\n  };\r\n\r\n  // render\r\n  return (\r\n    <ToastContext.Provider value={{ toast, showToast }}>\r\n      {children}\r\n    </ToastContext.Provider>\r\n  );\r\n};\r\n","import React, { useEffect, useContext, useState } from 'react';\r\nimport { UserContext } from '../contexts/UserContext';\r\nimport { RequestedListContext } from '../contexts/RequestedListContext';\r\nimport { ToastContext } from '../contexts/ToastContext';\r\n\r\nexport const VoteSection = ({ bookInfo }) => {\r\n  const { userStatus, requestList, isSignedIn } = useContext(UserContext);\r\n  const { serverUrl } = useContext(RequestedListContext);\r\n  const [voteSum, setVoteSum] = useState(bookInfo.voteSum);\r\n  const [votedOn, setVotedOn] = useState(false);\r\n  const { showToast } = useContext(ToastContext);\r\n\r\n  // add/remove vote function\r\n  const vote = async (action) => {\r\n    try {\r\n      const res = await fetch(`${serverUrl}/api/${action}`, {\r\n        method: 'post',\r\n        headers: {\r\n          'content-type': 'application/json',\r\n        },\r\n        body: JSON.stringify({ uid: userStatus.uid, book: bookInfo }),\r\n      });\r\n\r\n      return await res.json();\r\n    } catch (err) {\r\n      console.log(`${action} failed`, err);\r\n    }\r\n  };\r\n\r\n  // button function\r\n  const handleVote = async () => {\r\n    if (!isSignedIn) return alert('Anda harus  Sign In sebelum request buku!');\r\n    if (votedOn) {\r\n      // remove 1 voteSum from server side\r\n      const response = await vote('remove-vote');\r\n      // when success, update voteSum on the client-side and toggle the button.\r\n      if (response.status === 'success') {\r\n        setVoteSum(voteSum - 1);\r\n        setVotedOn(!votedOn);\r\n        showToast('Request telah dibatalkan', true);\r\n      } else {\r\n        console.log(`removing request failed: ${response.err}`);\r\n        showToast(\r\n          'Request gagal dihapus. Periksa Koneksi Anda dan coba lagi',\r\n          true\r\n        );\r\n      }\r\n    } else {\r\n      // add 1 vote from server side\r\n      const response = await vote('add-vote');\r\n      // when success, update vote sum on client side and toggle the button\r\n      if (response.status === 'success') {\r\n        setVoteSum(voteSum + 1);\r\n        setVotedOn(!votedOn);\r\n        showToast('Request telah ditambahkan.', true);\r\n      } else {\r\n        console.log(`Adding request failed: ${response.err}`);\r\n        showToast(\r\n          'Request gagal ditambahkan. Periksa koneksi Anda dan coba lagi',\r\n          true\r\n        );\r\n      }\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    // if bookId exists in requestList, set votedOn to true and vise versa.\r\n    setVotedOn(requestList.includes(bookInfo.id));\r\n  }, [requestList]);\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"voteSum\">\r\n        <div>Telah diminta sebanyak:</div>\r\n        {/* ini gak tau kenapa kalo di gabung jadi satu div, voteSum gak mau update */}\r\n        <div>{voteSum}</div>\r\n      </div>\r\n      <input\r\n        className=\"vote-btn\"\r\n        type=\"button\"\r\n        value={votedOn ? 'Batalkan Request' : '+ Request Buku'}\r\n        onClick={handleVote}\r\n      />\r\n    </React.Fragment>\r\n  );\r\n};\r\n","/**\r\n * props:\r\n * - book : detailed book info\r\n * - uid : user's uid\r\n */\r\n\r\nimport React, { useContext } from 'react';\r\nimport { UserContext } from '../contexts/UserContext';\r\nimport { ToastContext } from '../contexts/ToastContext';\r\n\r\nexport const ReqButton = ({ book }) => {\r\n  // get contexts and set status\r\n  const { userStatus } = useContext(UserContext);\r\n  const { uid } = userStatus;\r\n  const { showToast } = useContext(ToastContext);\r\n  const [isRequested, setIsRequested] = React.useState(false);\r\n\r\n  // functions\r\n  const sendData = async () => {\r\n    if (uid === '') return alert('Anda harus sign in sebelum request buku');\r\n\r\n    // add book request to 'buku' collection\r\n    book.voteSum = 1;\r\n    const result = await fetch(\r\n      'https://us-central1-mitranetra-1234.cloudfunctions.net/app/api/add',\r\n      {\r\n        method: 'post',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({ book, uid }),\r\n      }\r\n    )\r\n      .then((res) => res.json())\r\n      .then((json) => {\r\n        console.log('adding book status:', json);\r\n        // setIsRequested(true);\r\n        showToast('Buku berhasil ditambahkan ke daftar request', true);\r\n      })\r\n      .catch((err) => {\r\n        console.log('error while adding book:', err);\r\n        showToast(\r\n          'Request gagal ditambahkan. Periksa koneksi Anda dan coba lagi',\r\n          true\r\n        );\r\n      });\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {/* <span aria-live=\"assertive\">\r\n        {isRequested ? 'Buku berhasil ditambahkan ke daftar request' : null}\r\n      </span> */}\r\n      <input\r\n        type=\"button\"\r\n        value=\"Request Buku\"\r\n        title=\"Request buku ini\"\r\n        onClick={sendData}\r\n      />\r\n    </React.Fragment>\r\n  );\r\n};\r\n","/**\r\n * included components: ReqButton, VoteSection\r\n * props:\r\n * - category ('ReqSection', 'bookResult')\r\n * - book: array of book's brief info\r\n * - detailedInfo: array of all detailed book's info\r\n */\r\n\r\nimport React, { Fragment, useState } from 'react';\r\nimport { VoteSection } from './VoteSection';\r\nimport { ReqButton } from './ReqButton';\r\n\r\nexport const InfoListItem = ({ book, detailedInfo, category }) => {\r\n  const handleListItem = () => {\r\n    const infos = [\r\n      'imageLinks',\r\n      'title',\r\n      'subtitle',\r\n      'authors',\r\n      'averageRating',\r\n      'publishedDate',\r\n      'publisher',\r\n      'categories',\r\n    ];\r\n\r\n    // assign to '-' if info was empty/unavailable\r\n    for (let info of infos) {\r\n      if (!book[info]) {\r\n        book[info] = '-';\r\n      }\r\n    }\r\n\r\n    const arrJoin = (info) => {\r\n      if (info === '-') return '-';\r\n      else return info.join(', ');\r\n    };\r\n\r\n    const b = book;\r\n    return (\r\n      <Fragment>\r\n        <div>\r\n          <img\r\n            src={b.imageLinks.smallThumbnail}\r\n            alt={`Gambar Cover untuk ${b.title}`}\r\n          />\r\n        </div>\r\n        <h4>{b.title}</h4>\r\n        <p>{b.subtitle === '-' ? '' : b.subtitle}</p>\r\n        <div>\r\n          Pengarang: {arrJoin(b.authors)}.\r\n          <br />\r\n          Penerbit: {b.publisher}.\r\n          <br />\r\n          Tanggal Terbit: {b.publishedDate}\r\n          <br />\r\n          Kategori: {arrJoin(b.categories)}\r\n          <br />\r\n          Rating: {b.averageRating + '/5'}\r\n        </div>\r\n      </Fragment>\r\n    );\r\n  };\r\n\r\n  // run info handler function\r\n  const listItem = handleListItem();\r\n\r\n  return (\r\n    <li>\r\n      {listItem}\r\n      <BookDescription content={book.description} />\r\n\r\n      {category === 'bookResult' ? <ReqButton book={detailedInfo} /> : null}\r\n\r\n      {category === 'reqSection' ? (\r\n        <VoteSection bookInfo={detailedInfo} />\r\n      ) : null}\r\n    </li>\r\n  );\r\n};\r\n\r\n// BookDescription component\r\nconst BookDescription = ({ content }) => {\r\n  const [showDesc, setShowDesc] = useState(false);\r\n\r\n  const toggleDesc = (e) => {\r\n    e.preventDefault();\r\n    setShowDesc(!showDesc);\r\n  };\r\n  return (\r\n    <div>\r\n      <a href=\"#\" onClick={toggleDesc}>\r\n        {showDesc ? 'Sembunyikan deskripsi' : 'Lihat deskripsi'}\r\n      </a>\r\n      {showDesc && <p>{content}</p>}\r\n    </div>\r\n  );\r\n};\r\n","import React, { useEffect } from 'react';\r\nimport { InfoListItem } from './InfoListItem';\r\n\r\nexport const BookInfo = ({ category, data }) => {\r\n  // functions\r\n  const handleBookInfo = () => {\r\n    if (data.items === undefined) return '';\r\n\r\n    const infoList = data.items.map((book) => {\r\n      return (\r\n        <InfoListItem\r\n          key={book.id}\r\n          book={book.volumeInfo}\r\n          detailedInfo={book}\r\n          category={category}\r\n        />\r\n      );\r\n    });\r\n    return infoList;\r\n  };\r\n  return (\r\n    <div>\r\n      <ul>{handleBookInfo()}</ul>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useContext, useState, useEffect } from 'react';\r\nimport { ResultDetails } from './ResultDetails';\r\nimport { BookInfo } from './BookInfo';\r\nimport PageNav from './PageNav';\r\nimport { RequestedListContext } from '../contexts/RequestedListContext';\r\nimport { SearchResultContext } from '../contexts/SearchResultContext';\r\n\r\nexport const BookResult = () => {\r\n  // get contexts\r\n  const { requestedList } = useContext(RequestedListContext);\r\n  const { results, isLoading, fetched } = useContext(SearchResultContext);\r\n\r\n  // arrays for containing new filtered results data\r\n  let requestedData = { items: [] };\r\n  let unrequestedData = { items: [] };\r\n\r\n  // function for separating requested and unrequested search result\r\n  const filterSearchResults = () => {\r\n    if (typeof results === 'undefined' || !results.data.items) return;\r\n    const searchResults = results.data.items;\r\n    const requestedBookList = requestedList.items;\r\n    const requestedResults = requestedBookList.filter((item, i, arr) => {\r\n      for (let result of searchResults) {\r\n        if (result.id === item.id) {\r\n          result.status = 'requested';\r\n          return result;\r\n        }\r\n      }\r\n    });\r\n\r\n    const unrequestedResults = searchResults.filter((result) => {\r\n      if (typeof result.status === 'undefined') return result;\r\n    });\r\n    requestedData.items = requestedResults.reverse();\r\n    unrequestedData.items = unrequestedResults;\r\n  };\r\n\r\n  // run search filtering\r\n  filterSearchResults();\r\n\r\n  return (\r\n    <div>\r\n      <ResultDetails />\r\n      {requestedData.items.length !== 0 ? (\r\n        <React.Fragment>\r\n          <h3>Hasil dari buku yang telah di request</h3>\r\n          <BookInfo category=\"reqSection\" data={requestedData} />\r\n        </React.Fragment>\r\n      ) : null}\r\n      {unrequestedData.items.length !== 0 ? (\r\n        <React.Fragment>\r\n          <h3>Hasil buku yang belumdi request</h3>\r\n          <BookInfo category=\"bookResult\" data={unrequestedData} />\r\n        </React.Fragment>\r\n      ) : null}\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react'\r\n\r\nclass PageNav extends React.Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        {/* show page navigation for result pagination */}\r\n      </div>\r\n    )\r\n  }\r\n}\r\nexport default PageNav\r\n","import React, { useContext, useState } from 'react';\r\nimport { SearchResultContext } from '../contexts/SearchResultContext';\r\nimport { useLocation } from 'react-router-dom';\r\n\r\nexport const SearchBar = ({ onChange, keywords }) => {\r\n  const searchResultContext = useContext(SearchResultContext);\r\n  const { results, fetched, isLoading, getData } = searchResultContext;\r\n\r\n  const getUrl = (keywords) => {\r\n    const url = new URL('https://www.googleapis.com/books/v1/volumes');\r\n    const params = {\r\n      q: keywords,\r\n      startIndex: 0,\r\n      maxResults: 15,\r\n    };\r\n    url.search = new URLSearchParams(params).toString();\r\n    return url;\r\n  };\r\n\r\n  const enterOnSearchField = (e) => {\r\n    if (e.keyCode === 13) {\r\n      getData(getUrl, keywords);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <input\r\n        type=\"text\"\r\n        name=\"keywords\"\r\n        placeholder=\"ketik judul dan pengarang untuk hasil lebih akurat\"\r\n        onChange={(e) => onChange(e)}\r\n        onKeyUp={enterOnSearchField}\r\n        value={keywords}\r\n      />\r\n      <input\r\n        type=\"button\"\r\n        value=\"Cari\"\r\n        onClick={getData.bind(this, getUrl, keywords)}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n","import React, { useEffect, useState } from 'react';\r\nimport { BookInfo } from './BookInfo';\r\nimport { useContext } from 'react';\r\nimport { RequestedListContext } from '../contexts/RequestedListContext';\r\n\r\nexport const RequestSection = () => {\r\n  const { requestedList } = useContext(RequestedListContext);\r\n  return (\r\n    <div>\r\n      <h2>Buku Paling Banyak Di Request</h2>\r\n      <BookInfo category=\"reqSection\" data={requestedList} />\r\n    </div>\r\n  );\r\n};\r\n","/**\r\n * tabs props will appear based on login status\r\n * handleTab(value) akan dijalankan saat tab di klik\r\n */\r\nimport React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst handleTab = (e, value) => {\r\n  e.preventDefault();\r\n  alert(value);\r\n};\r\n\r\nexport const Tabs = ({ activeTab, userStatus, isSignedIn }) => {\r\n  const showTabs = () => {\r\n    if (!isSignedIn) {\r\n      return [\r\n        { label: 'Home', value: 1, url: '/' },\r\n        { label: 'Register', value: 2, url: '/register' },\r\n        { label: 'Sign in', value: 3, url: '/sign-in' },\r\n      ];\r\n    } else {\r\n      return userStatus.role === 'admin'\r\n        ? [\r\n            { label: 'Home', value: 1, url: '/' },\r\n            { label: 'Admin Tools', value: 2, url: '/admin-tools' },\r\n            { label: 'Sign out', value: 3, url: '/sign-out' },\r\n          ]\r\n        : [\r\n            { label: 'Home', value: 1, url: '/' },\r\n            { label: 'My Request List', value: 2, url: '/user/requests' },\r\n            { label: 'Sign out', value: 3, url: '/sign-out' },\r\n          ];\r\n    }\r\n  };\r\n  const tabs = showTabs();\r\n  const welcomeMessage = () => {\r\n    if (!isSignedIn) return <span>Selamat datang. Silahkan Sign in</span>;\r\n    else\r\n      return userStatus.role === 'admin' ? (\r\n        <span>{`Anda masuk dengan akun ${userStatus.email} sebagai admin`}</span>\r\n      ) : (\r\n        <span>{`Anda masuk dengan akun ${userStatus.email}`}</span>\r\n      );\r\n  };\r\n  return (\r\n    <nav className=\"tab-manager\">\r\n      {welcomeMessage()}\r\n      <ul>\r\n        {tabs.map(({ label, value, url }) => (\r\n          <li\r\n            key={value}\r\n            className={`tab ${value === activeTab ? 'selected-tab' : ''}`}\r\n          >\r\n            <Link to={url}>{label}</Link>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </nav>\r\n  );\r\n};\r\n","import React, { useContext } from 'react';\r\nimport { UserContext } from '../contexts/UserContext';\r\n\r\nexport const Popup = ({ history, message }) => {\r\n  // automatically redirected to home after 1.5 seconds\r\n  setTimeout(() => history.push('/'), 1500);\r\n  return (\r\n    <div className=\"popup\">\r\n      <div className=\"popup-content\">\r\n        <h3 role=\"alert\">{message}</h3>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useContext, useEffect } from 'react';\r\nimport '../App.css';\r\nimport { UserContext } from '../contexts/UserContext';\r\nimport { Popup } from './Popup';\r\n\r\nexport const RegisterForm = ({\r\n  onChange,\r\n  history,\r\n  email,\r\n  password,\r\n  sendEmailVerification,\r\n  emptyForm,\r\n}) => {\r\n  // get contexts\r\n  const { register, registerOnServer, setAlert, alertMessage } = useContext(\r\n    UserContext\r\n  );\r\n\r\n  // reset alert message and form stuff\r\n  useEffect(() => {\r\n    setAlert('');\r\n    emptyForm();\r\n  }, []);\r\n\r\n  // handle submit server side\r\n  const handleSubmitOnServer = async (e) => {\r\n    e.preventDefault();\r\n    await registerOnServer(email, password, sendEmailVerification);\r\n  };\r\n  // handle submit client side\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    register(email, password);\r\n  };\r\n\r\n  // render\r\n  return (\r\n    <div className=\"popup\">\r\n      <div className=\"popup-content\">\r\n        <h2>Register dengan Alamat Email dan Password</h2>\r\n        <form onSubmit={handleSubmitOnServer} method=\"post\">\r\n          <label htmlFor=\"email\">Email: </label>\r\n          <input\r\n            id=\"email\"\r\n            type=\"email\"\r\n            name=\"email\"\r\n            autoFocus\r\n            placeholder=\"abc@example.com\"\r\n            value={email}\r\n            onChange={onChange}\r\n          />{' '}\r\n          <br />\r\n          <label htmlFor=\"password\">Password: </label>\r\n          <input\r\n            id=\"password\"\r\n            type=\"password\"\r\n            name=\"password\"\r\n            value={password}\r\n            onChange={onChange}\r\n          />{' '}\r\n          <br />\r\n          <input\r\n            type=\"checkbox\"\r\n            id=\"sendEV\"\r\n            name=\"sendEmailVerification\"\r\n            checked={sendEmailVerification}\r\n            onChange={onChange}\r\n          />\r\n          <label htmlFor=\"sendEV\">Kirimkan Email Verifikasi</label>\r\n          <p role=\"alert\">{alertMessage}</p>\r\n          <input type=\"submit\" value=\"Register\" />\r\n          <input type=\"button\" value=\"Close\" onClick={() => history.goBack()} />\r\n        </form>\r\n      </div>\r\n      {alertMessage === 'success' ? (\r\n        <Popup\r\n          history={history}\r\n          message=\"Registrasi sukses! Anda akan log in secara otomatis.\"\r\n        />\r\n      ) : null}\r\n    </div>\r\n  );\r\n};\r\n","import React, { useContext, useEffect } from 'react';\r\nimport '../App.css';\r\nimport { UserContext } from '../contexts/UserContext';\r\nimport { Popup } from './Popup';\r\n\r\nexport const SignInForm = ({\r\n  onChange,\r\n  email,\r\n  password,\r\n  emptyForm,\r\n  history,\r\n}) => {\r\n  // get contexts\r\n  const { signIn, alertMessage, setAlert } = useContext(UserContext);\r\n\r\n  // reset alert message and form stuff\r\n  useEffect(() => {\r\n    setAlert('');\r\n    emptyForm();\r\n  }, []);\r\n\r\n  // handle submit\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    signIn(email, password);\r\n  };\r\n  return (\r\n    <div className=\"popup\">\r\n      <div className=\"popup-content\">\r\n        <h2>Sign in dengan Alamat Email dan Password Anda</h2>\r\n        <form onSubmit={handleSubmit} method=\"post\">\r\n          <label htmlFor=\"email\">Email: </label>\r\n          <input\r\n            id=\"email\"\r\n            type=\"email\"\r\n            name=\"email\"\r\n            value={email}\r\n            autoFocus\r\n            placeholder=\"abc@example.com\"\r\n            onChange={(e) => onChange(e)}\r\n          />{' '}\r\n          <br />\r\n          <label htmlFor=\"password\">Password: </label>\r\n          <input\r\n            id=\"password\"\r\n            type=\"password\"\r\n            name=\"password\"\r\n            value={password}\r\n            onChange={(e) => onChange(e)}\r\n          />{' '}\r\n          <br />\r\n          <p role=\"alert\">{alertMessage}</p>\r\n          <input type=\"submit\" value=\"Sign in\" />\r\n          <input\r\n            type=\"button\"\r\n            value=\"Cancel\"\r\n            onClick={() => history.goBack()}\r\n          />\r\n        </form>\r\n      </div>\r\n      {alertMessage === 'success' ? (\r\n        <Popup history={history} message=\"Sign in sukses!\" />\r\n      ) : null}\r\n    </div>\r\n  );\r\n};\r\n","import React, { useEffect } from 'react';\r\n\r\nexport const SignOutMessage = ({ history, signOut, isSignedIn }) => {\r\n  signOut();\r\n  // go back to home page and auto reload when finished signing out\r\n  useEffect(async () => {\r\n    await history.push('/');\r\n    window.location.reload(false);\r\n  }, [isSignedIn]);\r\n  return (\r\n    <div className=\"popup\">\r\n      <div className=\"popup-content\">\r\n        <h3 role=\"alert\">Signing out...</h3>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useContext } from 'react';\r\nimport { ToastContext } from '../contexts/ToastContext';\r\n\r\nexport const Toast = () => {\r\n  const { toast } = useContext(ToastContext);\r\n  // isShown defines wether the toast is visibly shown or not, will be done through css\r\n  const { toastMsg, isShown } = toast;\r\n  return (\r\n    <div>\r\n      <span aria-live=\"assertive\">{toastMsg}</span>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useRef, useContext, useState } from 'react';\r\nimport firebase from '../firebaseConfig';\r\nimport { BookInfo } from './BookInfo';\r\n\r\nexport const MyRequestList = ({ requestList }) => {\r\n  const [data, setData] = useState({ items: [] });\r\n  const books = [];\r\n\r\n  // focus handler\r\n  const headingRef = useRef();\r\n\r\n  // show book info\r\n  const getReqBookInfos = async (list) => {\r\n    if (list.length === 0) return;\r\n    await firebase\r\n      .firestore()\r\n      .collection('buku')\r\n      .where('id', 'in', list)\r\n      .get()\r\n      .then((query) => {\r\n        query.forEach((doc) => {\r\n          books.unshift(doc.data());\r\n        });\r\n      });\r\n    setData({ items: books });\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    headingRef.current.focus();\r\n    getReqBookInfos(requestList);\r\n  }, [requestList]);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <h2 tabIndex={0} ref={headingRef}>\r\n        Daftar Buku yang Anda Request\r\n      </h2>\r\n      <BookInfo category=\"reqSection\" data={data} />\r\n    </React.Fragment>\r\n  );\r\n};\r\n","import React, { useContext, useState, useEffect } from 'react';\r\nimport { RequestedListContext } from '../contexts/RequestedListContext';\r\n\r\nexport const ManageUsers = () => {\r\n  const { serverUrl } = useContext(RequestedListContext);\r\n  const [setIsFetching, isFetching] = useState(false);\r\n  const [setUsers, users] = useState([]);\r\n\r\n  const getAllUsers = async () => {\r\n    try {\r\n      setIsFetching(true);\r\n      const response = await fetch(`${serverUrl}/admin-tools/all-users`);\r\n      const result = response.json();\r\n      setUsers(result);\r\n      setIsFetching(false);\r\n    } catch (e) {\r\n      console.log(e);\r\n      setIsFetching(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getAllUsers();\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <h3>Manage Users</h3>\r\n      <p>{JSON.stringify(users)}</p>\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\r\n\r\nexport const ManageBooks = () => {\r\n  return (\r\n    <div>\r\n      <h3>Manage Books</h3>\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport { Route, Switch, Link, Redirect } from 'react-router-dom';\r\nimport { ManageUsers } from './ManageUsers';\r\nimport { ManageBooks } from './ManageBooks';\r\n\r\nexport const AdminTools = () => {\r\n  return (\r\n    <div>\r\n      <h2>Admin Tools</h2>\r\n      <nav className=\"nav-admin-tools\">\r\n        <ul>\r\n          <li>\r\n            <Link to=\"/admin-tools/users\">Users</Link>\r\n          </li>\r\n          <li>\r\n            <Link to=\"/admin-tools/books\">Books</Link>\r\n          </li>\r\n        </ul>\r\n      </nav>\r\n\r\n      {/* AdminTools routes */}\r\n      <Switch>\r\n        <Route path=\"/admin-tools/users\">\r\n          <ManageUsers />\r\n        </Route>\r\n        <Route path=\"/admin-tools/books\">\r\n          <ManageBooks />\r\n        </Route>\r\n\r\n        {/* automatically go to users management page */}\r\n        <Redirect exact from=\"/admin-tools\" to=\"/admin-tools/users\" />\r\n      </Switch>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useReducer, useContext, useEffect } from 'react';\nimport { BookResult } from './components/BookResult';\nimport { SearchBar } from './components/SearchBar';\nimport { RequestSection } from './components/RequestSection';\nimport { RequestedListContext } from './contexts/RequestedListContext';\nimport { Tabs } from './components/Tabs';\nimport { Route, useHistory, Switch } from 'react-router-dom';\nimport { RegisterForm } from './components/RegisterForm';\nimport { UserContext } from './contexts/UserContext';\nimport { SignInForm } from './components/SignInForm';\nimport { SignOutMessage } from './components/SignOutMessage';\nimport { Toast } from './components/Toast';\nimport { MyRequestList } from './components/MyRequestList';\nimport { AdminTools } from './components/AdminTools';\nimport { SearchResultContext } from './contexts/SearchResultContext';\n\nexport const App = () => {\n  /**\n   * start input stuff\n   */\n\n  const [input, setInput] = useReducer(\n    (state, newState) => ({ ...state, ...newState }),\n    // initial form state\n    { keywords: '', email: '', password: '', sendEmailVerification: true }\n  );\n  const onChange = (e) => {\n    const value =\n      e.target.name === 'sendEmailVerification'\n        ? e.target.checked\n        : e.target.value;\n    const name = e.target.name;\n    setInput({ [name]: value });\n  };\n\n  // reset form field to empty\n  const emptyForm = () => {\n    setInput({ keywords: '', email: '', password: '' });\n  };\n\n  /**\n   * end input stuff\n   */\n\n  /**\n   * start fetch data\n   */\n  // get required contexts\n  const { getRequestedList } = useContext(RequestedListContext);\n  const { fetched } = useContext(SearchResultContext);\n\n  // useHistory() for page history navigation\n  const history = useHistory();\n\n  // get current user account status\n  const {\n    userStatus,\n    isSignedIn,\n    signOut,\n    checkUserStatus,\n    requestList,\n    authCheckDone,\n  } = useContext(UserContext);\n\n  // connect to local server if on localhost (development stage)\n  const { setServerUrl } = useContext(RequestedListContext);\n  useEffect(() => {\n    if (window.location.hostname === 'localhost') {\n      setServerUrl('http://localhost:5000');\n      console.log(\n        'You are on Development stage. Connected to server at localhost:5000'\n      );\n    }\n  }, []);\n\n  // get user status and fetch global requested list\n  useEffect(() => {\n    checkUserStatus();\n    getRequestedList();\n  }, [isSignedIn]);\n\n  /**\n   * end fetch data\n   */\n  /**\n   * start render components\n   */\n  return (\n    <div className=\"App\">\n      <h1>Request Buku Format EPUB dan Braille</h1>\n\n      <React.Fragment>\n        {authCheckDone ? (\n          <Tabs userStatus={userStatus} isSignedIn={isSignedIn} />\n        ) : null}\n        <main>\n          <Switch>\n            {/* // home page */}\n            <Route exact path=\"/\">\n              <SearchBar onChange={onChange} keywords={input.keywords} />\n              {fetched ? <BookResult /> : null}\n              <RequestSection />\n            </Route>\n\n            <Route path=\"/register\">\n              <RegisterForm\n                onChange={onChange}\n                emptyForm={emptyForm}\n                email={input.email}\n                password={input.password}\n                sendEmailVerification={input.sendEmailVerification}\n                history={history}\n              />\n            </Route>\n\n            {/* // sign in page */}\n            <Route path=\"/sign-in\">\n              <SignInForm\n                onChange={onChange}\n                email={input.email}\n                password={input.password}\n                history={history}\n                emptyForm={emptyForm}\n              />\n            </Route>\n\n            {/* // sign out page */}\n            <Route path=\"/sign-out\">\n              <SignOutMessage\n                history={history}\n                isSignedIn={isSignedIn}\n                signOut={signOut}\n              />\n            </Route>\n\n            {/* // admin tools page */}\n            <Route path=\"/admin-tools\">\n              <AdminTools />\n            </Route>\n\n            {/* // my request list page */}\n            <Route path=\"/user/requests\">\n              <MyRequestList requestList={requestList} />\n            </Route>\n\n            {/* // error page */}\n            <Route>\n              <h2>Halaman tidak ditemukan.</h2>\n            </Route>\n          </Switch>\n        </main>\n      </React.Fragment>\n\n      {/* show action notifications  */}\n      <Toast />\n    </div>\n  );\n\n  /**\n   * end render components\n   */\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from './App';\nimport { RequestedListProvider } from './contexts/RequestedListContext';\nimport { SearchResultProvider } from './contexts/SearchResultContext';\nimport { withRouter, BrowserRouter } from 'react-router-dom';\nimport { UserProvider } from './contexts/UserContext';\nimport { ToastProvider } from './contexts/ToastContext';\n\nReactDOM.render(\n  <BrowserRouter>\n    <SearchResultProvider>\n      <RequestedListProvider>\n        <UserProvider>\n          <ToastProvider>\n            <App />\n          </ToastProvider>\n        </UserProvider>\n      </RequestedListProvider>\n    </SearchResultProvider>\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n","const firebase = require('firebase/app');\r\n\r\n// firebase services\r\nrequire('firebase/auth');\r\nrequire('firebase/firestore');\r\n\r\n// Your web app's Firebase configuration\r\nvar firebaseConfig = {\r\n  apiKey: 'AIzaSyABr6Z9iTrM62xpqWWnno-P2fiPVMBj5eA',\r\n  authDomain: 'mitranetra-1234.firebaseapp.com',\r\n  databaseURL: 'https://mitranetra-1234.firebaseio.com',\r\n  projectId: 'mitranetra-1234',\r\n  storageBucket: 'mitranetra-1234.appspot.com',\r\n  messagingSenderId: '10603497416',\r\n  appId: '1:10603497416:web:db504911852f1f519122fd',\r\n  measurementId: 'G-KRXRPY012G',\r\n};\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nmodule.exports = firebase;\r\n"],"sourceRoot":""}